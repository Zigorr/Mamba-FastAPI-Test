"""add project table and update conversation table

Revision ID: 4476860c69a0
Revises: 288cfe842b6d
Create Date: 2025-05-11 01:04:44.713562

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4476860c69a0'
down_revision: Union[str, None] = '288cfe842b6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the 'projects' table - REMOVED as table already exists
    # op.create_table('projects',
    # sa.Column('id', sa.String(), nullable=False),
    # sa.Column('name', sa.String(), nullable=False),
    # sa.Column('website_url', sa.String(), nullable=True),
    # sa.Column('project_data', sa.JSON(), nullable=True, server_default='{}'),
    # sa.Column('user_email', sa.String(), nullable=False),
    # sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), nullable=True),
    # sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('NOW()'), onupdate=sa.text('NOW()'), nullable=True),
    # sa.ForeignKeyConstraint(['user_email'], ['users.email'], name=op.f('fk_projects_user_email_users')),
    # sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    # )
    # op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    # op.create_index(op.f('ix_projects_user_email'), 'projects', ['user_email'], unique=False) # Matches index=True on column
    # op.create_index('idx_project_user', 'projects', ['user_email'], unique=False) # Matches __table_args__

    # Modify 'conversations' table
    op.add_column('conversations', sa.Column('project_id', sa.String(), nullable=True))
    # op.create_index('idx_conv_project', 'conversations', ['project_id'], unique=False) # Removed duplicate raw named index
    op.create_index(op.f('ix_conversations_project_id'), 'conversations', ['project_id'], unique=False)
    op.create_index(op.f('ix_conversations_user_email'), 'conversations', ['user_email'], unique=False) # Kept as Alembic generated it
    op.create_foreign_key(op.f('fk_conversations_project_id_projects'), 'conversations', 'projects', ['project_id'], ['id']) # Added name using op.f()
    
    # Kept as Alembic generated these for 'messages' table
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_email'), 'messages', ['sender_email'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop changes from 'messages' table
    op.drop_index(op.f('ix_messages_sender_email'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')

    # Drop changes from 'conversations' table
    op.drop_constraint(op.f('fk_conversations_project_id_projects'), 'conversations', type_='foreignkey')
    op.drop_index(op.f('ix_conversations_user_email'), table_name='conversations') # Kept as Alembic generated it
    op.drop_index(op.f('ix_conversations_project_id'), table_name='conversations')
    # op.drop_index('idx_conv_project', table_name='conversations') # Removed duplicate raw named index
    op.drop_column('conversations', 'project_id')

    # Drop the 'projects' table - REMOVED as table was pre-existing
    # op.drop_index('idx_project_user', table_name='projects')
    # op.drop_index(op.f('ix_projects_user_email'), table_name='projects')
    # op.drop_index(op.f('ix_projects_id'), table_name='projects')
    # op.drop_table('projects')
    # ### end Alembic commands ###
